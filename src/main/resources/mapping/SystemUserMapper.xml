<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ren.mapper.SystemUserMapper" >
  <resultMap id="BaseResultMap" type="com.ren.model.SystemUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="INTEGER" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="error_num" property="errorNum" jdbcType="TINYINT" />
    <result column="error_time" property="errorTime" jdbcType="INTEGER" />
    <result column="login_num" property="loginNum" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name, true_name, password, login_time, login_ip, error_num, error_time, 
    login_num, role_id, phone, photo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ren.example.SystemUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from system_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
      <if test="paging">
          limit ${rowIndex},${pageSize}
      </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from system_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ren.example.SystemUserExample" >
    delete from system_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ren.model.SystemUser" >
    insert into system_user (id, user_name, true_name, 
      password, login_time, login_ip, 
      error_num, error_time, login_num, 
      role_id, phone, photo
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{loginTime,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR}, 
      #{errorNum,jdbcType=TINYINT}, #{errorTime,jdbcType=INTEGER}, #{loginNum,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ren.model.SystemUser" >
    insert into system_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="errorNum != null" >
        error_num,
      </if>
      <if test="errorTime != null" >
        error_time,
      </if>
      <if test="loginNum != null" >
        login_num,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="photo != null" >
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="errorNum != null" >
        #{errorNum,jdbcType=TINYINT},
      </if>
      <if test="errorTime != null" >
        #{errorTime,jdbcType=INTEGER},
      </if>
      <if test="loginNum != null" >
        #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ren.example.SystemUserExample" resultType="java.lang.Integer" >
    select count(*) from system_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update system_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.trueName != null" >
        true_name = #{record.trueName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=INTEGER},
      </if>
      <if test="record.loginIp != null" >
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.errorNum != null" >
        error_num = #{record.errorNum,jdbcType=TINYINT},
      </if>
      <if test="record.errorTime != null" >
        error_time = #{record.errorTime,jdbcType=INTEGER},
      </if>
      <if test="record.loginNum != null" >
        login_num = #{record.loginNum,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update system_user
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      true_name = #{record.trueName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=INTEGER},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      error_num = #{record.errorNum,jdbcType=TINYINT},
      error_time = #{record.errorTime,jdbcType=INTEGER},
      login_num = #{record.loginNum,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ren.model.SystemUser" >
    update system_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="errorNum != null" >
        error_num = #{errorNum,jdbcType=TINYINT},
      </if>
      <if test="errorTime != null" >
        error_time = #{errorTime,jdbcType=INTEGER},
      </if>
      <if test="loginNum != null" >
        login_num = #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ren.model.SystemUser" >
    update system_user
    set user_name = #{userName,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      error_num = #{errorNum,jdbcType=TINYINT},
      error_time = #{errorTime,jdbcType=INTEGER},
      login_num = #{loginNum,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateUserLoginSuccessInfo">
		UPDATE system_user SET login_time = #{loginTime}, login_ip = #{loginIp},error_num = 0,login_num = login_num + 1 WHERE id = #{id}
	</update>

  <!-- 登录失败更新用户信息 -->
  <update id="updateUserLoginErrorInfo">
		UPDATE system_user SET error_time = #{errorTime}, error_num = error_num + 1 WHERE id = #{id}
	</update>
</mapper>